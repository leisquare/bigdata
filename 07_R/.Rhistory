#1. 도움말 기능
iris
edit(iris)
?iris
help(iris)
help(iris)
# 1.2 검색기능
??iris
# 1.2 검색기능
?? iris
help.search('iris')
# 1.3 패키지 도움말
library(datasets)
# 1.3 패키지 도움말
library(help="datasets")
# 1.4 함수 도움말
method(as) #형변환 함수들
# 1.4 함수 도움말
methods(as) #형변환 함수들
# 1.4 함수 도움말
methods(as) #형변환 함수들
# 1.4 함수 도움말
methods(as) #형변환 함수들
as.interger(1.25)
?as.integer
example("as.integer")
as.interger(1.25)
as.integer(1.25)
# 1.4 함수 도움말
methods(as) #형변환 함수들
data <-c(10,20,30)
?mean
# 1.4 함수 도움말
methods(as) #형변환 함수들
# 1.4 함수 도움말
methods(as) #형변환 함수들
attributes(iris)
example(mean)
?mean
?mean
mean(data)
mean(data)
?mean
mean(data)
## 2. 패키지
# R내에 기본 패키지는 다운로드받을 수 있다.
# 2.1 패키지 설치
# 설치 : install.package("패키지명")
# 설치된 패키지를 메모리에 로드. library("패키지명")
# 패키지 내의 데이터나 함수들 막 사용
# 패키지 언로드: detach("package:패키지명",unload=true)
iris
detach("package:datasets",unload=true)
detach("package:datasets",unload=TRUE)
## 2. 패키지
# R내에 기본 패키지는 다운로드받을 수 있다.
# 2.1 패키지 설치
# 설치 : install.package("패키지명")
# 설치된 패키지를 메모리에 로드. library("패키지명")
# 패키지 내의 데이터나 함수들 막 사용
# 패키지 언로드: detach("package:패키지명",unload=true)
iris
## 2. 패키지
# R내에 기본 패키지는 다운로드받을 수 있다.
# 2.1 패키지 설치
# 설치 : install.package("패키지명")
# 설치된 패키지를 메모리에 로드. library("패키지명")
# 패키지 내의 데이터나 함수들 막 사용
# 패키지 언로드: detach("package:패키지명",unload=true)
iris
install.packages("arules")
library("arules")
?apriori
detach("package:arules",unload=true)
?apriori
detach("package:arules",unload=true)
?apriori
# 데이터의 경우는 메모리에 패키지 로드 없이 사용 가능
iris <- data(list = 'iris',package="datasets")
#변수들 다 삭제
ls()
rm(list=ls())
# 데이터의 경우는 메모리에 패키지 로드 없이 사용 가능
data(iris,package="datasets")
#변수들 다 삭제
ls()
add <- function(a,b)
result <- a+b
return(result)
## 3. 변수
#변수: 특수문자 중 . , _ 사용가능
# 할당 : <-, <<- 사용
result <- 0 # 전역변수 result
class(result) #타입
add <- function(a,b)
result <- a+b
return(result)
## 3. 변수
#변수: 특수문자 중 . , _ 사용가능
# 할당 : <-, <<- 사용
result <- 0 # 전역변수 result
class(result) #타입
add <- function(a,b){}
result <- a+b  #지역변수가 됨
return(result)
add(10,20)
add <- function(a,b){
result <- a+b  #지역변수가 됨
return(result)
}
add(10,20)
result
add <- function(a,b){
#result <- a+b  #지역변수가 됨
result <<-a+b # 전역변수 할당
return(result)
}
add(10,20)
result
ls(all.names = TRUE) #hidden변수도 포함함
ls() #변수들 출력
z<- z+10
## 4. 출력
result
print(result)
(z<- z+10)
(z<-x+y)
#변수목록 조회
x<-10
y<-10
(z<-x+y)
## 4. 출력
result
print(result)
(z<- z+10)
paste('hello','world')
paste('result 값은', result)
print('result 값은 '+result)
paste(c(1,2,3),c('하나','둘','셋'),sep='은 ',collapse='/')
paste(c(1,2,3),c('하나','둘','셋'), sep='은 ')
# print('result 값은 '+result) R에서는 오류가 발생해버리니 그냥 paste를 쓴다.
paste('Hello','world',sep=',')
month.name
(nth<paste(1:12,c('st','nd','rd',re[('th',9)))
(nth<paste(1:12,c('st','nd','rd',re[('th'.9)))
(nth<paste(1:12,c('st','nd','rd',rep('th',9)))
(nth<paste(1:12,c('st','nd','rd',rep('th',9))))
(nth<-paste(1:12,c('st','nd','rd',rep('th',9))))
(nth<-paste(1:12,c('st','nd','rd',rep('th',9))))
(nth<-paste(1:12,c('st','nd','rd',rep('th',9)),sep=""))
month.name
(nth<-paste(1:12,c('st','nd','rd',rep('th',9)),sep=""))
paste(month.name,nth)
paste(month.name,nth, sep = '은 ',collapse=" ; ")
paste(month.name,nth, sep = '은 ',collapse=" ; ")
kor<-paste('한국','일본','미국')
paste(kor,usa,sep=':')
usa<-paste('korea','japan','america')
paste(kor,usa,sep=':')
(nth<-paste(1:12,c('st','nd','rd',rep('th',9)),sep=""))
paste(month.name,nth, sep = '은 ',collapse=" ; ")
kor<-paste(1:3,c('한국','일본','미국')
kor<-paste(1:3,c('한국','일본','미국'))
kor<-paste(c(1,2,3),c('한국','일본','미국'))
paste(kor,usa,sep=':')
kor<-paste(c('한국','일본','미국'))
usa<-paste(c('korea','japan','america')
paste(kor,usa,sep=':')
usa<-paste(c('korea','japan','america'))
paste(kor,usa,sep=':')
paste(kor,usa,sep=':',collapse=" , ")
paste(kor,usa,sep=':',collapse=", ")
str<-paste(kor,usa,sep=':',collapse=", ")
str
strVector<-paste(kor,usa,sep=':',collapse=", ")
Cars93
data(Cars93)
data.Cars93
library(MASS)
install.packages("MASS")
install.packages("MASS")
livrary(MASS)
library(MASS)
Cars93
head9Cars93) #1~5행까지만만
head9Cars93) #1~5행까지만만
head(Cars93) #1~5행까지만만
library(MASS)
Cars93
edit(Cars93)
# 2. 기본데이터타입: character, numeric, logical,
a<-"Hello"
a<-"Hello"
R"
a"
b <- 10.1
b<- 10
as.character(b)
strB
strB<-as.character(b) # as."():
b <- 10.1
b<- 10
strB<-as.character(b) # as."():
strB
c
c<-TRUE;
c
is logical(c)
is.logical(c)
class(strB)
class(a)
class(b)
class(c)
str(b)
str(c)
