ggplot(aes(x=freq,y=reorder(word,freq)))+
geom_col()
df_id<-rename(df_word,id=var1,freq=Freq)
df_id<-rename(df_word,id=Var1,freq=Freq)
df_id %>%
arrange(desc(freq)) %>%
head(20) %>%
ggplot(aes(x=freq,y=reorder(word,freq)))+
geom_col()
df_id<-rename(df_word,id=Var1,freq=Freq)
df_id<-rename(df_word,id=Var1,Freq=freq)
df_id<-rename(df_word,Var1=id,freq=Freq)
df_id<-rename(df_id,Var1=id,freq=Freq)
df_id<-rename(df_id,id=Var1,Freq=freq=)
df_id<-rename(df_id,id=Var1,Freq=freq)
df_id
head(df_id)
df_id<-rename(df_id,id=Var1,freq=Freq)
df_id %>%
arrange(desc(freq)) %>%
head(20) %>%
ggplot(aes(x=freq,y=reorder(word,freq)))+
geom_col()
df_id %>%
arrange(desc(freq)) %>%
head(20) %>%
ggplot(aes(x=freq,y=reorder(word,freq)))+
geom_col()
df_id %>%
arrange(desc(freq)) %>%
head(20) %>%
ggplot(aes(x=freq,y=reorder(id,freq)))+
geom_col()
df_id %>%
filter(freq>=150) %>%
arrange(desc(freq)) %>%
head(20) %>%
ggplot(aes(x=freq,y=reorder(id,freq)))+
geom_col()
df_id_f<-df_id %>%
filter(freq>=150)
top20<-df_word %>%
filter(id %in%df_id_f )
source('E:/kim_jiwon/src/07_R/ex12.텍스트마이닝.R', encoding = 'UTF-8', echo=TRUE)
install.packages("rJava")
install.packages("memoise")
install.packages("KoNLP")
install.packages("devtools")
install.packages("hash")
install.packages("tau")
install.packages("Sejong")
top20<-df_word %>%
filter(id %in% df_id_f ) %>%
arrange(desc(freq)) %>%
head(20)
install.packages("memoise")
install.packages("KoNLP")
install.packages("devtools")
install.packages("hash")
install.packages("tau")
install.packages("Sejong")
install.packages("devtools")
install.packages("hash")
install.packages("tau")
install.packages("Sejong")
install.packages("tau")
install.packages("Sejong")
top20<-df_word %>%
filter(id %in% df_id_f ) %>%
arrange(desc(freq)) %>%
head(20)
top20<-df_word %>%
filter(id %in% [df_id_f] ) %>%
arrange(desc(freq)) %>%
head(20)
top20<-df_word %>%
filter(id %in% [df_id_f,] ) %>%
arrange(desc(freq)) %>%
head(20)
dr_word
df_word
df_id
twitter
twitter
twitter$id==df_id$freq>=150
twitter %>%
filter(id==df_id$freq>=150)
twitter %>%
filter(id=df_id$freq>=150)
twitter %>%
filter(id==df_id$freq>=150)
filter(id==(df_id$freq>=150)
twitter %>%
filter(id==(df_id$freq>=150))
df_id_f
twitter %>%
filter(twitter$id==df_id_f$id)
twitter_check<-twitter %>%
filter(twitter$id==df_id_f$id) %>%
top20<-df_word %>%
filter() %>%
arrange(desc(freq)) %>%
head(20)
twitter_check<-twitter %>%
filter(twitter$id==df_id_f$id) %>%
top20<-df_word %>%
filter() %>%
arrange(desc(freq)) %>%
head(20)
twitter_check<-twitter %>%
filter(twitter$id==df_id_f$id) %>%
twitter_check
twitter_check<-twitter %>%
filter(twitter$id==df_id_f$id) %>%
twitter_check
twitter_check<-twitter %>%
filter(twitter$id==df_id_f$id)
twitter %>%
filter(twitter$id==df_id_f$id)
twitter_check
twitter_check$tw<-str_replace_all(twitter_check$tw,'\\W',' ')
twitter_check$tw<-str_replace_all(twitter_check$tw,'[ㄱ-ㅎ]',' ')
nouns<-extractNoun(twitter_check$tw)
nouns<-extractNoun(twitter_check$tw)
class(nouns)
nouns
wordcount<-table(unlist(nouns))
class(wordcount)
df_word_upgrade<-as.data.frame(wordcount,stringsAsFactors=FALSE)
str(df_word_upgrade)
top20<-df_word_upgrade[order(df_word_upgrade$freq,decreasing=T),][1:20,]
#1.정적 웹크롤링-단일 페이지 크롤링.(rvest패키지 사용)
install.packages("rvest")
library(rvest)
#1.정적 웹크롤링-단일 페이지 크롤링.(rvest패키지 사용)
install.packages("rvest")
#1.정적 웹크롤링-단일 페이지 크롤링.(rvest패키지 사용)
install.packages("rvest")
url<-'https://movie.naver.com/movie/point/af/list.nhn'
text<-read_html(url,encoding='Cp949')
text<-read_html(url,encoding='Cp949')
library(rvest)
text<-read_html(url,encoding='Cp949')
text
#영화제목; .movie
nodes<-html_nodes(text,'.movie')
nodes
title<-html_text(nodes)
title
movieInfo<-paste0(url,movieInfo)
movieInfo<-url+html_attr(nodes,'href')
movieInfo<-paste0(url,movieInfo)
movieInfo<-url+html_attr(nodes,'href')
movieInfo<-html_attr(nodes,'href')
movieInfo<-paste0(url,movieInfo)
movieInfo
#평점; .list_nerizen_score em
nodes<-html_nodes(text,".list_netizen_score em")
nodes
point<-html_text(nodes)
point
nodes<-html_nodes(text,'.title')
nodes
review<-html_text(nodes)
revies
review
review<-gsub('\t','',review)
review<-gsub('\n','',review)
review
strsplit(review,'wnd[0-9]{1,2}')
review<-strsplit(review,'wnd[0-9]{1,2}')[seq(2,20,2)]
review
review<-gsub('tlsrh','',review)
review
nodes<-html_nodes(text,'.title')
nodes
review<-html_text(nodes)
review
review<-gsub('\t','',review)
review<-gsub('\n','',review)
review<-strsplit(review,'wnd[0-9]{1,2}')[seq(2,20,2)]
review<-gsub('tlsrh','',review)
review
nodes<-html_nodes(text,'.title')
nodes
review<-html_text(nodes)
review
review<-gsub('\t','',review)
review<-gsub('\n','',review)
review
review<-strsplit(review,'중중[0-9]{1,2}')[seq(2,20,2)]
review<-gsub('신고','',review)
review
nodes<-html_nodes(text,'.title')
review<-html_text(nodes)
review<-gsub('\t','',review)
review<-gsub('\n','',review)
review<-strsplit(review,'중[0-9]{1,2}')[seq(2,20,2)]
review<-gsub('신고','',review)
review
nodes<-html_nodes(text,'.title')
review<-html_text(nodes)
review<-gsub('\t','',review)
review<-gsub('\n','',review)
review<-unlist(strsplit(review,'중[0-9]{1,2}'))[seq(2,20,2)]
review<-gsub('신고','',review)
review
page<-cbind(title,movieInfo)
page<-cbind(page,point)
page<-cbind(page,review)
Vies(page)
View(page)
#csv파일로 cut
write.csv(page,"outData/movie_review.csv")
#csv파일로 cut
write.csv(page,"outData/movie_review.csv",row.nums=F)
#csv파일로 cut
write.csv(page,"outData/movie_review.csv",row.names=F)
cat(url+'\n')
cat(url,'\n')
for(i in 1:1000){
url<-paste0(site,i);
cat(url,'\n')
}
site='https://movie.naver.com/movie/point/af/list.nhn?&page='
movie.review<-NULL
for(i in 1:1000){
url<-paste0(site,i);
cat(url,'\n')
}
#여러 페이지 정적 웹 크롤링
home='https://movie.naver.com/movie/point/af/list.nhn?'
site='https://movie.naver.com/movie/point/af/list.nhn?&page='
movie.review<-NULL
for(i in 1:100){
url<-paste0(site,i);
cat(url,'\n')
#영화제목; .movie
nodes<-html_nodes(text,'.movie')
title<-html_text(nodes)
#해당 영화 링크
movieInfo<-html_attr(nodes,'href')
movieInfo<-paste0(home,movieInfo)
#평점; .list_nerizen_score em
nodes<-html_nodes(text,".list_netizen_score em")
point<-html_text(nodes)
#영화 리뷰; .title
nodes<-html_nodes(text,'.title')
review<-html_text(nodes)
review<-gsub('\t','',review)
review<-gsub('\n','',review)
review<-unlist(strsplit(review,'중[0-9]{1,2}'))[seq(2,20,2)]
review<-gsub('신고','',review)
page<-cbind(title,movieInfo)
page<-cbind(page,point)
page<-cbind(page,review)
movie.review<-rbind(movie.review,page)
}
write.csv(movie.review,'outData/movie_review100page.csv')
movie_review100page<-read.csv('outData/movie_review100page.csv'
movie_review100page<-read.csv('outData/movie_review100page.csv'
library(rvest)
movie_review100page<-read.csv('outData/movie_review100page.csv'
movie_review100page<-read.csv('outData/movie_review100page.csv'
movie_review100page<-read.csv('outData/movie_review100page.csv'
movie_review100page<-read.csv('outData/movie_review100page.csv')
movie_review100page<-read.csv('outData/movie_review100page.csv')
#1.3 명사 추출
head(txt)
nouns<-extractNoun(temp)  #명사만 추출해 list형태로 변환
class(nouns)
head(unlist(nouns))
wordcount<-table(unlist(nouns)) #워드카운트(단어별 빈도표) 생성
#1. 힙합 가사 텍스트 마이닝
#1.1
txt<-readLines("inData/hiphop.txt") #비정형데이터
extractNoun(txt)
head(txt)
#1.3 명사 추출
head(txt)
nouns<-extractNoun(temp)  #명사만 추출해 list형태로 변환
#1.2. 국정원 트윗 텍스트 마이닝
temp<-gsub('\\W',' ',txt)
temp<-gsub('\\d',' ',temp)
temp==txt
temp
#1.3 명사 추출
head(txt)
nouns<-extractNoun(temp)  #명사만 추출해 list형태로 변환
nouns
head(unlist(nouns))
table(unlist(nouns)
unlist(nouns)
table(unlist(nouns))
class(movie_review100page)
str(movie_review100page)
(movie_review100page)
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point))
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point)) %>%
arrange(point_mean)
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point)) %>%
arrange(-point_mean)
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot()
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean)
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_col()+
geom_text(aes(label=freq),vjust=-0.5,col='red')
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_col()+
geom_text(,vjust=-0.5,col='red')
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_col()+
geom_text(vjust=-0.5,col='red')
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_col()
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_bar(fill=title)
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean),fill=title)+
geom_bar()
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_bar()
g
g
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_bar()
ggplot(aes(x=title,y=point_mean)
movie_review100page %>%
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_col()
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean))+
geom_col(fill=title)
movie_review100page %>%
group_by(title) %>%
summarise(point_mean=mean(point),
point_sum=sum(point)) %>%
arrange(-point_mean) %>%
ggplot(aes(x=title,y=point_mean,fill=title))+
geom_col()
#영화 리뷰 내용만 뽑아 최빈단어 10개 워드 크라우드 시각화.
reviewtxt<-movie_review100page$review
reviewtxt<-str_replace_all(reviewtxt,'[ㄱ-ㅎ]',' ')
reviewtxtnouns<-extractNoun(reviewtxt)
reviewwordcount<-table(unlist(reviewtxtnouns))
reviewwordcount
rw_wordcount<-as.data.frame(reviewwordcount,stringsAsFactors=FALSE)
rw_wordcount
#이름바꾸기
rw_wordcount<-rename(rw_wordcount,word=Var1,freq=Freq)
rw_wordcount %>%
arrange(desc(freq)) %>%
head(10) %>%
ggplot(aes(x=freq,y=reorder(word,freq)))+
geom_col()
#워드 클라우드
set.seed(1234)
pal<-brewer.pal(9,'Blues')[5:9]
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(3,0.3),
colors=pal)
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0.3),
colors=pal)
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0.5),
colors=pal)
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2),
colors=pal)
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0),
colors=pal)
#최빈단어뽑기
top20<-rw_wordcount[order(rw_wordcount$freq,decreasing=T),][1:20,]
wordcloud(words=rw_wordcount20$word,
freq=rw_wordcount20$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0),
colors=pal)
#최빈단어뽑기
rw_wordcount20<-rw_wordcount[order(rw_wordcount$freq,decreasing=T),][1:20,]
wordcloud(words=rw_wordcount20$word,
freq=rw_wordcount20$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0),
colors=pal)
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0),
colors=pal)
wordcloud(words=rw_wordcount20$word,
freq=rw_wordcount20$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0),
colors=pal)
wordcloud(words=rw_wordcount$word,
freq=rw_wordcount$freq,
min.freq=5,
max.words=200,
random.order=F,
rot.per=0.1,
scale=c(2,0),
colors=pal)
?rvest
