ggplot(iris,aes(x=Species,y=Sepal.Length))+
geom_boxplot(aes(fill=Species),notch=T)
#(2) anova()
#ggplot::mpg데이터셋에서 cyl에 따라 mpg의 평균이 다른지
rm(list=ls())
str(mtcars$cyl)
table(mpg$cyl,useNA="ifany") #cyl의 가지수와 결측치 확인
###예제: Datasets::orange; 오렌지나무의 종류, 연령, 둘레
#오렌지나무의 연령에 따른 둘레의 평균이 상이한지 분석하시오..
fit<-lm(cricumference~age, data=Orange)
###예제: Datasets::orange; 오렌지나무의 종류, 연령, 둘레
#오렌지나무의 연령에 따른 둘레의 평균이 상이한지 분석하시오..
fit<-lm(circumference~age, data=Orange)
fit
anova(fit)
anova(fit)
################################################################
# # #       빅데이터 분석 결과 시각화 사례 연구 소스       # # #
################################################################
#1. koweps_hpc10_2015_beta5.sav 로드하여 변수명 결정
getwd()
raw_welfare<-read.spss(file='inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
raw_welfare<-read.spss(file='inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
library(foreign)
raw_welfare<-read.spss(file='inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
raw_welfare<-read.spss(file='inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
install.packages("foreign") #read.spss() 함수 사용 목적
install.packages("foreign")
library(foreign)
raw_welfare<-read.spss(file='inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
raw_welfare<-read.spss(file='inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
setwd("c:/big/src/07_R") #디렉토리위치변경
################################################################
# # #       빅데이터 분석 결과 시각화 사례 연구 소스       # # #
################################################################
#1. koweps_hpc10_2015_beta5.sav 로드하여 변수명 결정
getwd() #디렉토리위치확인
raw_welfare<-read.spss(file='inData/inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
View(raw_welfare)
View(raw_welfare)
# 필드명을 변경했다
raw_welfare<-rename(raw_welfare,gender=h10_g3,birth=h10_g4)
library(dplyr)
raw_welfare<-rename(raw_welfare,gender=h10_g3,birth=h10_g4)
raw_welfare<-rename(raw_welfare,gender=h10_g3,birth=h10_g4,marriage=h10_g10,religion=h10_g11,
income=h10_eco9,code_job=p1002_8aq1,code_region=h10_reg7)
raw_welfare<-rename(raw_welfare,marriage=h10_g10,religion=h10_g11,
income=h10_eco9,code_job=p1002_8aq1,code_region=h10_reg7)
View(raw_welfare)
raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
colnames(raw_welfare)
gender
raw_welfaregender
raw_welfare$gender
table(is.na(raw_welfare))
colSums(is.na(raw_welfare))
colSums(is.na(raw_welfare))
colSums(is.na(raw_welfare$gender))
table(is.na(raw_welfare$gender))
#(1)gender 필드 변수의 이상치가 있는지 확인하고 이상치 값 처리를 한다(1점).
raw_welfare$gender
raw_welfare$gender<-ifelse((raw_welfare$gender!=1 & raw_welfare$gender!=2),NA,raw_welfare$gender)
# ② gender 필드 변수의 결측치를 확인한다(1점).
table(is.na(raw_welfare$gender))
#③ gender의 값이 1은 male로 2는 female로 변경하고 gender의 타입을 factor로 변경한다(1점).
raw_welfare$gender <- ifelse(raw_welfare$gender=1, 'male', 'female')
#③ gender의 값이 1은 male로 2는 female로 변경하고 gender의 타입을 factor로 변경한다(1점).
raw_welfare$gender <- ifelse(raw_welfare$gender==1, 'male', 'female')
raw_welfare$gender
#④ 성별 비율을 도표로 나타내고 그래프로 시각화한다(2점).
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
#(1) 도표로 평균의 차이 나타내기
sleep %>%
filter(!is.na(extra)&!is.na(group)) %>%
group_by(group) %>%
summarise(extra.mean=mean(extra)) %>%
ggplot(aes(x=group,y=extra.mean)) +
geom_col(aes(fill=group),width=0.7)
#④ 성별 비율을 도표로 나타내고 그래프로 시각화한다(2점).
library(ggplot2)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
#⑤ income의 최소값, 1분위수, 중위수, 3분위수, 최대값, 결측치 등을 탐색하고, boxplot과 월급의 빈도그래프를 시각화한다(2점).
summary(raw_welfare$income)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
#⑥ income이 0인 데이터는 이상치로 정하고, 이상치를 결측 처리한다(1점).
# ⑦ 결측치를 제외한 데이터를 이용하여 성별에 따른 월급차이가 있는지를 분석한다(2점).
table(is.na(raw_welfare$gender))
ggplot(raw_welfare, aes(x=gender,y=income))  +
geom_boxplot(aes(col=income))+
#⑥ income이 0인 데이터는 이상치로 정하고, 이상치를 결측 처리한다(1점).
# ⑦ 결측치를 제외한 데이터를 이용하여 성별에 따른 월급차이가 있는지를 분석한다(2점).
table(is.na(raw_welfare$gender))
ggplot(raw_welfare, aes(x=gender,y=income))  +
geom_boxplot(aes(col=income))
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_col(aes(fill=income),width=0.7)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_bar(stat='identity')
#⑤ income의 최소값, 1분위수, 중위수, 3분위수, 최대값, 결측치 등을 탐색하고,
#boxplot과 월급의 빈도그래프를 시각화한다(2점).
summary(raw_welfare$income)
raw_welfare$income<-ifelse((raw_welfare$income==0),NA,raw_welfare$income)
raw_welfare$income
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_bar(stat='identity')
var.test(income~gender,data=raw_welfare)
var.test(income~gender,data=raw_welfare,na.rm=T)
t.test(income~gender,data=raw_welfare,var.equal=T,na.rm=T)
t.test(income~gender,data=raw_welfare,var.equal=F,na.rm=T)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_bar(stat='identity')
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
ggplot(aes(y=income))+
geom_bar(stat='identity')
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_bar(stat='identity')
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_point(position='jitter',col='yellow',alpha=0.7)
raw_welfare1<-raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
#(1)gender 필드 변수의 이상치가 있는지 확인하고 이상치 값 처리를 한다(1점).
raw_welfare1$gender
raw_welfare1$gender<-ifelse((raw_welfare$gender!=1 & raw_welfare$gender!=2),NA,raw_welfare$gender)
# ② gender 필드 변수의 결측치를 확인한다(1점).
table(is.na(raw_welfare1$gender))
is.na(raw_welfare1$gender)
raw_welfare1$gender
raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
raw_welfare$gender<-ifelse((raw_welfare$gender!=1 & raw_welfare$gender!=2),NA,raw_welfare$gender)
#(1)gender 필드 변수의 이상치가 있는지 확인하고 이상치 값 처리를 한다(1점).
raw_welfare$gender
raw_welfare$gender<-ifelse((raw_welfare$gender!=1 & raw_welfare$gender!=2),NA,raw_welfare$gender)
raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
#(1)gender 필드 변수의 이상치가 있는지 확인하고 이상치 값 처리를 한다(1점).
raw_welfare$gender
raw_welfare<-read.spss(file='inData/inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
raw_welfare<-rename(raw_welfare,gender=h10_g3,birth=h10_g4,marriage=h10_g10,religion=h10_g11,
income=h10_eco9,code_job=p1002_8aq1,code_region=h10_reg7)
raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
#(1)gender 필드 변수의 이상치가 있는지 확인하고 이상치 값 처리를 한다(1점).
raw_welfare$gender
# ② gender 필드 변수의 결측치를 확인한다(1점).
table(is.na(raw_welfare$gender))
raw_welfare$gender<-ifelse((raw_welfare$gender!=1 & raw_welfare$gender!=2),NA,raw_welfare$gender)
#③ gender의 값이 1은 male로 2는 female로 변경하고 gender의 타입을 factor로 변경한다(1점).
raw_welfare$gender <- ifelse(raw_welfare$gender==1, 'male', 'female')
raw_welfare$gender
str(raw_welfare)
colSums(is.na(welfare))
colSums(is.na(raw_welfare))
colSums(is.na(raw_welfare))
class(welfare$gender)
class(raw_welfare$gender)
table(welfare$gender,useNA='ifany')
table(raw_welfare$gender,useNA='ifany')
#④ 성별 비율을 도표로 나타내고 그래프로 시각화한다(2점).
library(ggplot2)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
raw_welfare$income
raw_welfare$income<-ifelse((raw_welfare$income==0),NA,raw_welfare$income)
raw_welfare$income
var.test(income~gender,data=raw_welfare,na.rm=T)
t.test(income~gender,data=raw_welfare,var.equal=F,na.rm=T)
raw_welfare<-raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
raw_welfare
#⑤ income의 최소값, 1분위수, 중위수, 3분위수, 최대값, 결측치 등을 탐색하고,
#boxplot과 월급의 빈도그래프를 시각화한다(2점).
summary(raw_welfare$income)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(aes(col=income))+
geom_point(position='jitter',col='yellow',alpha=0.7)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot()+
geom_point(position='jitter',col='yellow',alpha=0.7)
ggplot(raw_welfare, aes(y=income),na.rm=T)  +
geom_boxplot()+
geom_point(position='jitter',col='yellow',alpha=0.7)
raw_welfare$gender<-factor(raw_welfare$gender)
raw_welfare$gender
str(raw_welfare$gender)
#④ 성별 비율을 도표로 나타내고 그래프로 시각화한다(2점).
library(ggplot2)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
raw_welfare<-raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
###1번 문제의 결과인 data.frame변수를 이용하여 나이와 월급의 관계를 분석하여
#몇 살 때 월급을 가장 많이 받는지 시각화하시오.
#① birth, income 필드 변수의 이상치와 결측치를 확인한다(2점).
table(is.na(raw_welfare$birth))
table(is.na(raw_welfare$income))
boxplot(raw_welfare$income)$stats
mean(raw_welfare$income)+3*sd(raw_welfare$income)
mean(raw_welfare$income)-3*sd(raw_welfare$income)
mean(raw_welfare$income,na.rm=T)+3*sd(raw_welfare$income)
mean(raw_welfare$income,na.rm=T)+3*sd(raw_welfare$income,na.rm=T)
mean(raw_welfare$income,na.rm=T)-3*sd(raw_welfare$income,na.rm=T)
mean(raw_welfare$birth,na.rm=T)+3*sd(raw_welfare$birth,na.rm=T)
mean(raw_welfare$birth,na.rm=T)-3*sd(raw_welfare$birth,na.rm=T)
raw_welfare$birth
mean(raw_welfare$birth,na.rm=T)-3*sd(raw_welfare$birth,na.rm=T)
mean(raw_welfare$birth,na.rm=T)+3*sd(raw_welfare$birth,na.rm=T)
boxplot(raw_welfare$income)$stats
boxplot(raw_welfare$birth)$stats
raw_welfare %>%
mutate(age=2021-birth+1)
raw_welfare %>%
ggplot(aes(x=age, y=income)) %>%
geom_point(aes(col=imcome),pch=16) %>%
geom_line(mapping=aes(x=age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=age, y=income)) %>%
geom_point(aes(col=imcome),pch=16) +
geom_line(mapping=aes(x=age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=age, y=income)) %>%
geom_point(aes(col=imcome),pch=16) +
geom_line(mapping=aes(x=age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=imcome),pch=16) +
geom_line(mapping=aes(x=age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(x=age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(x=raw_welfare$age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=raw_welfare$age, y=income)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(x=raw_welfare$age, y=income,color=age))
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(color=age))
raw_welfare
raw_welfare %>%
mutate(age=2021-birth+1)
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(color=age))
raw_welfare
raw_welfare %>%
mutate(age=2021-birth+1)
raw_welfare %>%
mutate(age=2021-birth+1) %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(color=age))
raw_welfare %>%
mutate(age=2021-birth+1) %>%
ggplot(aes(x=age, y=income,na.rm=T)) +
geom_point(aes(col=income),pch=16) +
geom_line(mapping=aes(color=age))
raw_welfare %>%
mutate(age=2021-birth+1) %>%
ggplot(aes(x=age, y=income,na.rm=T)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age))
raw_welfare %>%
mutate(age=2021-birth+1) %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age))
raw_welfare %>%
mutate(age=2021-birth+1) %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
walfare$age<-2015-welfare$birth+1
raw_walfare$age<-2015-welfare$birth+1
raw_walfare$age<-2015-raw_walfare$birth+1
raw_welfare$age<-2015-raw_welfare$birth+1
qplot(raw_welfare$age)
ggplot(data=raw_welfare,aes(age))+
geom_histogram()
ggplot(raw_welfare,aes(x=age))+geom_boxplot()
ggplot(raw_welfare,aes(x=age))+
geom_boxplot()+
theme(axis.text.x=element_blank())
ggplot(raw_welfare,aes(x=age))+
geom_boxplot()+
theme(axis.text.x=element_blank())
ggplot(raw_welfare,aes(x=age,y=income))+
geom_boxplot()+
theme(axis.text.x=element_blank())
raw_welfare %>%
mutate(age=2021-birth+1) %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare$age<-2015-raw_welfare$birth+1
raw_welfare
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(pch=16,na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_bar(aes(col=income),na.rm=T)
raw_welfare %>%
ggplot(aes(x=age)) +
geom_bar(aes(col=income),na.rm=T)
ggplot(raw_welfare,aes(x=age,y=income))+
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_bar(aes(col=income),na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
point
raw_welfare %>%
ggplot(aes(x=age, y=income)) +
geom_point(aes(col=income),pch=16,na.rm=T) +
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare<-raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
raw_welfare
raw_welfare<-read.spss(file='inData/inData/Koweps/Koweps_hpc10_2015_beta1.sav',
to.data.frame=T)
View(raw_welfare)
raw_welfare<-rename(raw_welfare,gender=h10_g3,birth=h10_g4,marriage=h10_g10,religion=h10_g11,
income=h10_eco9,code_job=p1002_8aq1,code_region=h10_reg7)
raw_welfare<-raw_welfare %>%
select(gender, birth,marriage,religion,income,code_job,code_region)
raw_welfare
raw_welfare$gender<-ifelse((raw_welfare$gender!=1 & raw_welfare$gender!=2),NA,raw_welfare$gender)
# ② gender 필드 변수의 결측치를 확인한다(1점).
table(is.na(raw_welfare$gender))
#③ gender의 값이 1은 male로 2는 female로 변경하고 gender의 타입을 factor로 변경한다(1점).
raw_welfare$gender <- ifelse(raw_welfare$gender==1, 'male', 'female')
raw_welfare$gender<-factor(raw_welfare$gender)
raw_welfare$gender
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7,na.rm=T)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4,na.rm=T)
ggplot(data=raw_welfare,aes(x=gender,y=income))+
geom_violin(na.rm=T)+
geom_point(position='jitter',col='yellow',alpha=0.7,na.rm=T)+
geom_boxplot(aes(fill=gender),notch=T,width=0.4,na.rm=T)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot()+
geom_point(position='jitter',col='yellow',alpha=0.7)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot()+
geom_point(position='jitter',col='yellow',alpha=0.7,na.rm=T)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(na.rm=T)+
geom_point(position='jitter',col='yellow',alpha=0.7,na.rm=T)
ggplot(data = raw_welfare, aes(x = income))+
geom_bar()
ggplot(data = raw_welfare, aes(x = income,na.rm=T))+
geom_bar()
ggplot(data = raw_welfare, aes(x = income),na.rm=T)+
geom_bar()
ggplot(data = raw_welfare, aes(x = income))+
geom_bar(,na.rm=T)
ggplot(data = raw_welfare, aes(x = income))+
geom_bar(na.rm=T)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(na.rm=T)+
geom_point(position='jitter',col='yellow',alpha=0.7,na.rm=T)
ggplot(raw_welfare, aes(x=income))  +
geom_boxplot(na.rm=T)+
geom_point(position='jitter',col='yellow',alpha=0.7,na.rm=T)
ggplot(raw_welfare, aes(x=income))  +
geom_boxplot(na.rm=T)
ggplot(raw_welfare, aes(x=y))  +
geom_boxplot(na.rm=T)
ggplot(raw_welfare, aes(y=income))  +
geom_boxplot(na.rm=T)
ggplot(data = raw_welfare, aes(x = income))+
geom_bar(na.rm=T)
raw_welfare$income<-ifelse((raw_welfare$income==0),NA,raw_welfare$income)
raw_welfare$income
var.test(income~gender,data=raw_welfare,na.rm=T)
t.test(income~gender,data=raw_welfare,var.equal=F,na.rm=T)
var.test(income~gender,data=raw_welfare,na.rm=T)
t.test(income~gender,data=raw_welfare,var.equal=T,na.rm=T)
ggplot(raw_welfare,aes(x=age,y=income))+
raw_welfare
ggplot(raw_welfare,aes(x=age,y=income))+
raw_welfare
raw_welfare
ggplot(raw_welfare,aes(x=age,y=income))+
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare$age<-2015-raw_welfare$birth+1
qplot(raw_welfare$age)
ggplot(data=raw_welfare,aes(age))+
geom_histogram()
ggplot(raw_welfare,aes(x=age,y=income))+
geom_line(mapping=aes(color=age),na.rm=T)
raw_welfare
var.test(income~age,data=raw_welfare,na.rm=T)
var.test(income~age,data=raw_welfare)
ToothGrowth %>%
filter(!is.na(supp)&!is.na(len)) %>%
group_by(supp) %>%
summarise(len.mean=mean(len)) %>%
ggplot(aes(x=supp,y=len.mean)) +
geom_col(aes(fill=supp),width=0.7)
ggplot(data=ToothGrowth,aes(x=supp,y=len))+
geom_violin()+
geom_point(position='jitter',col='yellow',alpha=0.7)+
geom_boxplot(aes(fill=supp),notch=T,width=0.4)
table(sleep$group,useNA='ifany')
var.test(age~income,data=raw_welfare)
var.test(income~age,data=raw_welfare)
#④ 나이에 따른 월급의 차이가 있는지 관계를 분석한다(3점).
?var.test
fit<-lm(income~age,data=raw_welfare)
anova(test)
test<-lm(income~age,data=raw_welfare)
anova(test)
raw_welfare$agegrade<-ifelse(raw_welfare<=30,'young',ifelse(raw_welfare<=60,'middle','old'))
raw_welfare$agegrade<-ifelse(raw_welfare$age<=30,'young',ifelse(raw_welfare$age<=60,'middle','old'))
raw_welfare$agegrade
ggplot(data = raw_welfare, aes(x = agegrade)) + geom_bar()
boxplot(income~agegrade,data=raw_welfare,col="tomato4")
boxplot(income~agegrade,data=raw_welfare)
boxplot(income~agegrade,data=raw_welfare,na.rm=T)
test<-lm(income~agegrade,data=raw_welfare)
anova(test)
var.test(income~agegrade,data=raw_welfare)
test<-lm(income~agegrade,data=raw_welfare)
anova(test)
table(is.na(raw_welfare$income))
table(is.na(raw_welfare$agegrade))
#5. 1번 문제의 결과인 data.frame변수를 이용하여 성별에 따른 월급의 차이는
#연령대 별로 다른지 분석하시오.
#채점기준 ① 성별, 연령대, 월급 데이터의 결측치를 확인한다(3점).
table(is.na(raw_welfare$gender))
summaryBy(agegrade~income,data=raw_welfare,FUN=c(mean,sd))
#채점기준 ② 연령대별, 성별 월급의 평균과 표준편차, 빈도를 출력한다(3점).
library(doBy)
summaryBy(agegrade~income,data=raw_welfare,FUN=c(mean,sd))
summaryBy(income~agegrade,data=raw_welfare,FUN=c(mean,sd))
summaryBy(income~agegrade,data=raw_welfare,FUN=c(mean,sd),na.rm=T)
summaryBy(gender~agegrade,data=raw_welfare,FUN=c(mean,sd),na.rm=T)
#채점기준 ③ 성별에 따른 월급의 차이가 연령대별로 다른지 시각화 한다(4점).
raw_welfare %>%
ggplot(aes(x=gender, y=income)) +
facet_wrap(~agegrade)+
geom_point(aes(col=income),pch=16,na.rm=T)
